syntax = "proto3";

package viamlabs.service.matter_controller.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service MatterControllerService {
  rpc Commission(CommissionRequest) returns (CommissionResponse) {
    option (google.api.http) = {
      post: "/viamlabs/api/v1/service/matter_controller/{name}/commission"
    };
  }

  rpc Discover(DiscoverRequest) returns (DiscoverResponse) {
    option (google.api.http) = {
      post: "/viamlabs/api/v1/service/matter_controller/{name}/discover"
    };
  }

  rpc CommandDevice(CommandRequest) returns (CommandResponse) {
    option (google.api.http) = {
      post: "/viamlabs/api/v1/service/matter_controller/{name}/command_device"
    };
  }
}

message CommissionRequest {
  string name = 1;
  string code = 2;
}

message CommissionResponse {
  int32 node_id = 1;
  google.protobuf.Timestamp date_commissioned = 2;
  google.protobuf.Timestamp last_interview = 3;
  int32 interview_version = 4;
  bool available = 5;
  bool is_bridge = 6;
  string attributes = 7;
  float last_subscription_attempt = 8;
}

message DiscoverRequest {
  string name = 1;
}

message DiscoverResponse {
  message CommissionableNode {
    string instanceName = 1;
    string hostName = 2;
    int64 port = 3;
    int64 longDiscriminator = 4;
    int64 vendorId = 5;
    int64 productId = 6;
    int32 commissioningMode = 7;
    int32 deviceType = 8;
    string deviceName = 9;
    string pairingInstruction = 10;
    int32 pairingHint = 11;
    int32 mrpRetryIntervalIdle = 12;
    int32 mrpRetryIntervalActive = 13;
    int32 mrpRetryActiveThreshold = 14;
    bool supportsTcp = 15;
    bool isICDOperatingAsLIT = 16;
    repeated string addresses = 17;
    optional string rotatingId = 18;
  }

  repeated CommissionableNode nodes = 1;
}

enum Command {
  LIGHT_TOGGLE = 0;
  LIGHT_ON = 1;
  LIGHT_OFF = 2;
}

message CommandRequest {
  string name = 1;
  int32 node_id = 2;
  int32 endpoint_id = 3;
  Command command_name = 5;
  string payload = 6;
}

message CommandResponse {
  bool success = 1;
}
