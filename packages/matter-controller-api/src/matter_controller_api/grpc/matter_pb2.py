# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: matter.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0cmatter.proto\x12%viamlabs.service.matter_controller.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\";\n\x11\x43ommissionRequest\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n\x04\x63ode\x18\x02 \x01(\tR\x04\x63ode\"\xa0\x03\n\x12\x43ommissionResponse\x12\x17\n\x07node_id\x18\x01 \x01(\x05R\x06nodeId\x12G\n\x11\x64\x61te_commissioned\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x10\x64\x61teCommissioned\x12\x41\n\x0elast_interview\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\rlastInterview\x12+\n\x11interview_version\x18\x04 \x01(\x05R\x10interviewVersion\x12\x1c\n\tavailable\x18\x05 \x01(\x08R\tavailable\x12\x1b\n\tis_bridge\x18\x06 \x01(\x08R\x08isBridge\x12\x1e\n\nattributes\x18\x07 \x01(\tR\nattributes\x12:\n\x19last_subscription_attempt\x18\x08 \x01(\x02R\x17lastSubscriptionAttempt\x12!\n\x0c\x65ndpoint_ids\x18\t \x03(\x05R\x0b\x65ndpointIds\"%\n\x0f\x44iscoverRequest\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\"\xd3\x06\n\x10\x44iscoverResponse\x12`\n\x05nodes\x18\x01 \x03(\x0b\x32J.viamlabs.service.matter_controller.v1.DiscoverResponse.CommissionableNodeR\x05nodes\x1a\xdc\x05\n\x12\x43ommissionableNode\x12\"\n\x0cinstanceName\x18\x01 \x01(\tR\x0cinstanceName\x12\x1a\n\x08hostName\x18\x02 \x01(\tR\x08hostName\x12\x12\n\x04port\x18\x03 \x01(\x03R\x04port\x12,\n\x11longDiscriminator\x18\x04 \x01(\x03R\x11longDiscriminator\x12\x1a\n\x08vendorId\x18\x05 \x01(\x03R\x08vendorId\x12\x1c\n\tproductId\x18\x06 \x01(\x03R\tproductId\x12,\n\x11\x63ommissioningMode\x18\x07 \x01(\x05R\x11\x63ommissioningMode\x12\x1e\n\ndeviceType\x18\x08 \x01(\x05R\ndeviceType\x12\x1e\n\ndeviceName\x18\t \x01(\tR\ndeviceName\x12.\n\x12pairingInstruction\x18\n \x01(\tR\x12pairingInstruction\x12 \n\x0bpairingHint\x18\x0b \x01(\x05R\x0bpairingHint\x12\x32\n\x14mrpRetryIntervalIdle\x18\x0c \x01(\x05R\x14mrpRetryIntervalIdle\x12\x36\n\x16mrpRetryIntervalActive\x18\r \x01(\x05R\x16mrpRetryIntervalActive\x12\x38\n\x17mrpRetryActiveThreshold\x18\x0e \x01(\x05R\x17mrpRetryActiveThreshold\x12 \n\x0bsupportsTcp\x18\x0f \x01(\x08R\x0bsupportsTcp\x12\x30\n\x13isICDOperatingAsLIT\x18\x10 \x01(\x08R\x13isICDOperatingAsLIT\x12\x1c\n\taddresses\x18\x11 \x03(\tR\taddresses\x12#\n\nrotatingId\x18\x12 \x01(\tH\x00R\nrotatingId\x88\x01\x01\x42\r\n\x0b_rotatingId\"\xcb\x01\n\x0e\x43ommandRequest\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x17\n\x07node_id\x18\x02 \x01(\x05R\x06nodeId\x12\x1f\n\x0b\x65ndpoint_id\x18\x03 \x01(\x05R\nendpointId\x12Q\n\x0c\x63ommand_name\x18\x05 \x01(\x0e\x32..viamlabs.service.matter_controller.v1.CommandR\x0b\x63ommandName\x12\x18\n\x07payload\x18\x06 \x01(\tR\x07payload\"+\n\x0f\x43ommandResponse\x12\x18\n\x07success\x18\x01 \x01(\x08R\x07success*8\n\x07\x43ommand\x12\x10\n\x0cLIGHT_TOGGLE\x10\x00\x12\x0c\n\x08LIGHT_ON\x10\x01\x12\r\n\tLIGHT_OFF\x10\x02\x32\xf0\x04\n\x17MatterControllerService\x12\xc7\x01\n\nCommission\x12\x38.viamlabs.service.matter_controller.v1.CommissionRequest\x1a\x39.viamlabs.service.matter_controller.v1.CommissionResponse\"D\x82\xd3\xe4\x93\x02>\"</viamlabs/api/v1/service/matter_controller/{name}/commission\x12\xbf\x01\n\x08\x44iscover\x12\x36.viamlabs.service.matter_controller.v1.DiscoverRequest\x1a\x37.viamlabs.service.matter_controller.v1.DiscoverResponse\"B\x82\xd3\xe4\x93\x02<\":/viamlabs/api/v1/service/matter_controller/{name}/discover\x12\xc8\x01\n\rCommandDevice\x12\x35.viamlabs.service.matter_controller.v1.CommandRequest\x1a\x36.viamlabs.service.matter_controller.v1.CommandResponse\"H\x82\xd3\xe4\x93\x02\x42\"@/viamlabs/api/v1/service/matter_controller/{name}/command_deviceb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'matter_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _MATTERCONTROLLERSERVICE.methods_by_name['Commission']._options = None
  _MATTERCONTROLLERSERVICE.methods_by_name['Commission']._serialized_options = b'\202\323\344\223\002>\"</viamlabs/api/v1/service/matter_controller/{name}/commission'
  _MATTERCONTROLLERSERVICE.methods_by_name['Discover']._options = None
  _MATTERCONTROLLERSERVICE.methods_by_name['Discover']._serialized_options = b'\202\323\344\223\002<\":/viamlabs/api/v1/service/matter_controller/{name}/discover'
  _MATTERCONTROLLERSERVICE.methods_by_name['CommandDevice']._options = None
  _MATTERCONTROLLERSERVICE.methods_by_name['CommandDevice']._serialized_options = b'\202\323\344\223\002B\"@/viamlabs/api/v1/service/matter_controller/{name}/command_device'
  _COMMAND._serialized_start=1742
  _COMMAND._serialized_end=1798
  _COMMISSIONREQUEST._serialized_start=118
  _COMMISSIONREQUEST._serialized_end=177
  _COMMISSIONRESPONSE._serialized_start=180
  _COMMISSIONRESPONSE._serialized_end=596
  _DISCOVERREQUEST._serialized_start=598
  _DISCOVERREQUEST._serialized_end=635
  _DISCOVERRESPONSE._serialized_start=638
  _DISCOVERRESPONSE._serialized_end=1489
  _DISCOVERRESPONSE_COMMISSIONABLENODE._serialized_start=757
  _DISCOVERRESPONSE_COMMISSIONABLENODE._serialized_end=1489
  _COMMANDREQUEST._serialized_start=1492
  _COMMANDREQUEST._serialized_end=1695
  _COMMANDRESPONSE._serialized_start=1697
  _COMMANDRESPONSE._serialized_end=1740
  _MATTERCONTROLLERSERVICE._serialized_start=1801
  _MATTERCONTROLLERSERVICE._serialized_end=2425
# @@protoc_insertion_point(module_scope)
